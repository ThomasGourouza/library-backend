services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: library_db
    healthcheck:
      test: [ "CMD-SHELL", "PGPASSWORD=$$POSTGRES_PASSWORD psql -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 -p 5432 -c 'SELECT 1' >/dev/null 2>&1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pgdata:/var/lib/postgresql/data

  nllb:
    build:
      context: ./nllb-translate-server
    container_name: nllb-translate
    restart: unless-stopped
    ports:
      - "18000:8000"                # host:container
    command: >
      uvicorn server:app
      --host 0.0.0.0
      --port 8000
      --workers 1
    environment:
      HF_HOME: /models
      TRANSFORMERS_CACHE: /models
      MODEL_ID: facebook/nllb-200-distilled-600M
    volumes:
      - nllb-cache:/models
    healthcheck:
      test: [ "CMD", "curl", "-fsS", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 5s
      retries: 5

  lt-fix-perms:
    image: libretranslate/libretranslate:v1.7.2
    user: "0:0"  # root, pour changer les droits
    entrypoint: [ "sh", "-lc", "mkdir -p /models/packages && chown -R libretranslate:libretranslate /models" ]
    volumes:
      - lt-models:/models
    restart: "no"

  libretranslate:
    image: libretranslate/libretranslate:v1.7.2
    container_name: libretranslate
    restart: unless-stopped
    ports:
      - "18001:5000"
    environment:
      LT_HOST: "0.0.0.0"
      LT_PORT: "5000"
      LT_LOAD_ONLY: "en,fr,de,es,it,pt,ru,ja"
      # LT_UPDATE_MODELS: "true"   # (optionnel) force la MAJ/téléchargement au démarrage
    volumes:
      - lt-models:/home/libretranslate/.local/share/argos-translate
    healthcheck:
      test: ["CMD", "python", "-c",
        "import urllib.request,sys; \
           sys.exit(0) if urllib.request.urlopen('http://127.0.0.1:5000/languages').status==200 else sys.exit(1)"
      ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 120s   # laisse 2 min au 1er démarrage

  # (Optional) Your Spring app
  # app:
  #   build:
  #     context: ./app           # your Spring Boot Docker context
  #   container_name: app
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres
  #     - nllb
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/library_db
  #     SPRING_DATASOURCE_USERNAME: admin
  #     SPRING_DATASOURCE_PASSWORD: admin123
  #     NLLB_BASE_URL: http://nllb:8000   # <-- call NLLB by service name/port
  #   ports:
  #     - "8080:8080"

volumes:
  pgdata:
  nllb-cache:
  lt-models:
